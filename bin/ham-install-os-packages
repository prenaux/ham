#!/bin/bash -e
if [[ -z "$HAM_HOME" ]]; then
  HAM_HOME="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
  export HAM_HOME
  echo "W/HAM_HOME not set, set to:" "$HAM_HOME"
fi
. "$HAM_HOME/bin/ham-bash-setenv.sh"

# IMPORTANT: Update the tag date when you make any change to the list of
# packages installed. You can replace the date with the output of `arch_datez`
TAG="ham-install-os-packages-${HAM_OS}-v23_12_10"
TAGFILE="$TEMPDIR/ham-install-os-packages-${HAM_OS}-tag.txt"

if [[ $(tagfile_status "$TAGFILE" "$TAG") == "up-to-date" ]]; then
  echo "I/ham-install-os-packages tagfile is up-to-date."
  if [ "$1" == "nocheck" ] || [ "$1" == "force" ]; then
    echo "I/Installing anyway because of 'nocheck' option."
  else
    exit 0
  fi
else
  echo "I/HAM_HOME: ${HAM_HOME}"
  echo "I/TAGFILE: ${TAGFILE}"
  echo "I/ham-install-os-packages tagfile is outdated, installing os packages..."
fi

case $HAM_OS in
  NT*)
    echo "### No extra packages need to be installed on Windows ###"
    ;;
  OSX)
    echo "### Make sure '$HAM_HOME/bin' isn't quarantined ###"
    toolset_unquarantine_dir "$HAM_HOME/bin"
    echo "### Installing packages required by ham on OSX (brew) ###"
    # coreutils is mainly for 'realpath' atm
    ham-brew install bash jq yq wget hstr mc ncdu htop coreutils autossh
    ;;
  LINUX)
    if [ "$(type apt-get 2>/dev/null | wc -l)" = 1 ]; then
      echo "### Installing packages required by ham on Linux (apt-get) ###"
      echo "I/Installing apt-get packages"
      (
        set -ex
        # autoremove & update fix "E: Unable to correct problems, you have held broken packages."
        sudo apt-get -y autoremove
        sudo apt-get -y update
        # sudo apt -y upgrade ; # Try this if your install seems broken...
        # install all our required packages
        ham-apt-get-install software-properties-common build-essential clang git lld curl ffmpeg file freeglut3-dev git g++ gcc git htop jq libcurl4-openssl-dev libdw-dev libunwind-dev libsdl2-dev libssl-dev libudev-dev mc mesa-common-dev mesa-utils net-tools netcat ntpdate p7zip-full procps pkg-config python3 python3-pip wget xsltproc autossh tcpdump
      )
    elif [ "$(type pacman 2>/dev/null | wc -l)" = 1 ]; then
      echo "### Installing packages required by ham on Linux (pacman) ###"
      echo "I/Installing pacman packages"
      (
        set -ex
        sudo pacman -Syu
        sudo pacman --noconfirm -S base-devel gcc clang lld curl ffmpeg file git glibc mesa libglvnd freeglut linux-api-headers sdl2 xorgproto libx11 htop jq openssl mc net-tools gnu-netcat ntp p7zip procps pkg-config python python-pip wget libxslt autossh tcpdump
      )
    else
      echo "E/Unsupported LINUX package manager"
      exit 1
    fi
    ;;
  *)
    echo "E/Toolset: Unsupported host OS"
    exit 1
    ;;
esac

# Update tag file
tagfile_update "$TAGFILE" "$TAG"

echo "I/Done"
