#!/bin/bash
. "$HAM_HOME/bin/ham-bash-lib.sh"
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

if [ -z "$PM2_ENV_NAME" ]; then
  echo "I/ham-pm2: Sourcing _ham_project"

  export HAM_NO_VER_CHECK=1
  WAS_ARGS=("$@") # push arguments
  set -- ""
  . hat . >/dev/null
  set -- "${WAS_ARGS[@]}" # restore arguments
  if [ -z "$PM2_ENV_NAME" ]; then
    echo "E/ham-pm2: PM2_ENV_NAME not defined, you should define it in your _ham_project."
    exit 1
  fi

  if [ -z $(where_inpath pm2) ]; then
    echo "E/ham-pm2: pm2 command not found, you should add nodejs as a toolset in your _ham_project. We're in '$(pwd)'."
    exit 1
  fi

  export PM2_HOME=$TEMPDIR/pm2-${PM2_ENV_NAME}
  echo "I/ham-pm2: PM2_ENV_NAME: $PM2_ENV_NAME"
fi

export PM2_HOME=$TEMPDIR/pm2-${PM2_ENV_NAME}
echo "I/ham-pm2: PM2_HOME: $PM2_HOME"

usage() {
  echo "I/ham-pm2: PM2_VERSION: $(pm2 -v)"
  pm2 -h
  echo ""
  echo "  ham-pm2 commands:"
  echo ""
  echo "    source                               To be sourced at the top of a script to warm up the pm2"
  echo "                                         environment to run it multiple times."
  echo "    start-once PM2_APP_NAME START_CMD    Start a pm2 process if it isnt already started."
  echo ""
  exit 1
}

do_pm2_start() {
  local PM2_APP_NAME=$1
  shift
  local START_CMD=$1
  shift
  if [ -z "$1" ]; then
    (
      set -x
      pm2 start --update-env --name "$PM2_APP_NAME" "$START_CMD"
    )
  else
    (
      set -x
      pm2 start --update-env --name "$PM2_APP_NAME" "$START_CMD" -- "$@"
    )
  fi
}

if [ -z "$1" ]; then
  usage
elif [ "$1" == source ]; then
  echo -n ""
elif [ "$1" == start-once ]; then
  shift
  PM2_APP_NAME="$1"
  if [ -z "$PM2_APP_NAME" ]; then
    echo "E/ham-pm2: start-once: PM2_APP_NAME not specified."
    exit 1
  fi
  shift
  START_CMD="$1"
  if [ -z "$START_CMD" ]; then
    echo "E/ham-pm2: start-once: START_CMD not specified."
    exit 1
  fi
  shift

  if [[ $(pm2 info "$PM2_APP_NAME" | grep 'status.*online') ]]; then
    echo "I/ham-pm2: '$PM2_APP_NAME' already started and online."
  else
    echo "I/ham-pm2: '$PM2_APP_NAME' not online, starting cmd: $START_CMD $@"
    do_pm2_start "$PM2_APP_NAME" "$START_CMD" "$@"
  fi
elif [ "$1" == restart ]; then
  shift
  PM2_APP_NAME="$1"
  if [ -z "$PM2_APP_NAME" ]; then
    echo "E/ham-pm2: restart: PM2_APP_NAME not specified."
    exit 1
  fi
  shift
  START_CMD="$1"
  if [ -z "$START_CMD" ]; then
    echo "E/ham-pm2: restart: START_CMD not specified."
    exit 1
  fi
  shift

  if [[ $(pm2 info "$PM2_APP_NAME" | grep 'status.*online') ]]; then
    echo "I/ham-pm2: '$PM2_APP_NAME' already started and online, stopping it first."
    pm2 stop "$PM2_APP_NAME"
  fi
  echo "I/ham-pm2: '$Pm2_APP_NAME' starting cmd: $START_CMD $@"
  do_pm2_start "$PM2_APP_NAME" "$START_CMD" "$@"
else
  set -e
  pm2 "$@"
fi
