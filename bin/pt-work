#!/bin/bash
PREV_PATH=${PATH}
if [[ -z "$HAM_HOME" ]]; then
    export HAM_HOME="$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." && pwd )"
    echo "W/HAM_HOME not set, set to:" $HAM_HOME
fi
. "$HAM_HOME/bin/ham-bash-setenv.sh"
export PATH=${PREV_PATH}:${PATH}

case $HAM_OS in
    NT*)
        PT_CMD="$HAM_HOME/bin/nt-x86/pt"
        ;;
    OSX)
        PT_CMD="$HAM_HOME/bin/$HAM_BIN_LOA/pt"
        ;;
    LINUX)
        PT_CMD="$HAM_HOME/bin/lin-x64/pt"
        ;;
    *)
        echo "W/ham-bash-setenv.sh: Unknown HAM_OS: $HAM_OS"
        ;;
esac

# the help
usage() {
    echo "usage: pt-dirs [ options ] targets..."
    echo "version:" `"${PT_CMD}" --version`
    echo ""
    echo "pt-dirs runs pt in multiple folders:"
    echo "-h             This help message"
    echo "-D directory   Add a toolkit to build - the toolkit should be in $WORK"
    echo "               (can be specified multiple times)"
    echo "--             Following parameters will be passed to pt directly"
    echo ""

    if [[ "${BASH_SOURCE[0]}" != "${0}" ]]; then
        # sourced...
        return 1
    else
        # regular call
        exit 1
    fi
}

# Check that there is at least one argument...
if [ $# = 0 ]; then
    echo "E/No argument specified"
    echo ""
    usage
fi

# process the arguments
_ARG_DIRECTORIES=()
while getopts "D:vh" OPT
do
    case "$OPT" in
        h)
            usage
            ;;
        \?)
            echo "E/Invalid option"
            echo ""
            usage
            ;;
        D)
            OPTARG=`ham-url dec "$OPTARG"`
            if  [[ "$OPTARG" == ?:/* ]] || [[ "$OPTARG" == /* ]] || [[ "$OPTARG" == .* ]] ;
            then
                # Explicit path
                _ARG_DIRECTORY="$OPTARG/sources/"
                if [[ ! -e "$_ARG_DIRECTORY" ]]; then
                    _ARG_DIRECTORY="$OPTARG"
                    if [[ ! -e "$_ARG_DIRECTORY" ]]; then
                        echo "E/Can't find directory '$_ARG_DIRECTORY'"
                        echo ""
                        usage
                    fi
                fi
            else
                # Work App path
                _ARG_DIRECTORY="$WORK/$OPTARG/sources/"
                if [[ ! -e "$_ARG_DIRECTORY" ]]; then
                    _ARG_DIRECTORY="$WORK/$OPTARG/"
                    if [[ ! -e "$_ARG_DIRECTORY" ]]; then
                        echo "E/Can't find directory '$_ARG_DIRECTORY'"
                        echo ""
                        usage
                    fi
                fi
            fi
            _ARG_DIRECTORIES+=("$_ARG_DIRECTORY")
            ;;
    esac
done
shift $((OPTIND-1))

ptIn() {
    export DIR="$1"
    shift
    echo "I/Pt Command: $PT_CMD" $* "$DIR"
    "$PT_CMD" $* "$DIR"
    errcheck $? pt-dirs "Search in $DIR failed."
    if [[ -d "$DIR/../scripts" ]]; then
        "$PT_CMD" $* "$DIR/../scripts"
    fi
}

if [[ "$_ARG_DIRECTORY" != "" ]]; then
    for dir in "${_ARG_DIRECTORIES[@]}"; do
        ptIn "$dir" $*
    done
else
    ptIn . $*
fi
