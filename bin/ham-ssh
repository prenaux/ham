#!/bin/bash -e
source "$HAM_HOME/bin/ham-bash-lib.sh"

function usage() {
  echo "usage:"
  echo "  ham-ssh pick|HOST (tmux) (ssh command options)"
  echo ""
  echo "  When 'pick' is specified as host a fzf picker is used to pick"
  echo "  one of the 'ham-ssh-ls' config."
  exit 1
}

function pick_host() {
  ham-ssh-ls | fzf --header "=== Pick a SSH host ==="
}

SSH_CMD=$(ham-print-exe-path autossh)
if [[ -z "$SSH_CMD" ]]; then
  SSH_CMD=ssh
fi
log_info "SSH_CMD: $SSH_CMD"

if [[ -z "$1" ]]; then
  log_error "No arguments specified."
  usage
fi

USE_TMUX=0

PARAMS=()
while true; do
  case "$1" in
    pick)
      HOST=$(pick_host)
      shift
      ;;
    tmux)
      USE_TMUX=1
      shift
      ;;
    *)
      break
      ;;
  esac
done

if [[ -z "$HOST" ]]; then
  if [[ -z "$1" ]]; then
    log_error "No host specified."
    usage
  else
    HOST="$1"
    shift
  fi
fi

if [[ "$USE_TMUX" == "1" ]]; then
  PARAMS=("${PARAMS[@]}" -t "tmux new -A -s $HOST")
fi

PARAMS=("${PARAMS[@]}" "$@")

if [[ "$SSH_CMD" == "autossh" ]]; then
  (
    set -x
    # shellcheck disable=SC2029 # yes, we want it expended client side
    "$SSH_CMD" -M 0 -o "ServerAliveInterval 3" -o "ServerAliveCountMax 3" "$HOST" "${PARAMS[@]}"
  )
else
  (
    set -x
    # shellcheck disable=SC2029 # yes, we want it expended client side
    "$SSH_CMD" "$HOST" "${PARAMS[@]}"
  )
fi
