#!/bin/bash
#
# Cleanup docker files: untagged containers and images.
#

untagged_containers() {
  # Print containers using untagged images: $1 is used with awk's print: 0=line, 1=column 1.
  # NOTE: "[0-9a-f]{12}" does not work with GNU Awk 3.1.7 (RHEL6).
  # Ref: https://github.com/blueyed/dotfiles/commit/a14f0b4b#commitcomment-6736470
  docker ps -a | tail -n +2 | awk '$2 ~ "^[0-9a-f]+$" {print $'"$1"'}'
}

untagged_images() {
  # Print untagged images: $1 is used with awk's print: 0=line, 3=column 3.
  # NOTE: intermediate images (via -a) seem to only cause
  # "Error: Conflict, foobarid wasn't deleted" messages.
  # Might be useful sometimes when Docker messed things up?!
  # docker images -a | awk '$1 == "<none>" {print $'$1'}'
  docker images | tail -n +2 | awk '$1 == "<none>" {print $'"$1"'}'
}

# Dry-run.
if [ "$1" = "doit" ]; then
  # Remove containers with untagged images.
  echo "I/=== Removing containers ==="
  untagged_containers 1 | xargs --no-run-if-empty docker rm --volumes=true

  # Remove untagged images
  echo "I/=== Removing images ==="
  untagged_images 3 | xargs --no-run-if-empty docker rmi

  # Remove dangling volumes
  echo "I/=== Removing volumes ==="
  docker volume prune -f | sed '/Total reclaimed space/d'

  echo "I/=== Done ==="
else
  echo "I/=== Containers with uncommitted images ==="
  untagged_containers 0
  echo
  echo "I/=== Uncommitted images ==="
  untagged_images 0
  echo
  echo "I/=== Dangling volumes ==="
  docker volume ls --filter dangling=true -q
  echo
  echo "I/=== Done ==="
  echo "I/Use '${0##*/} doit' to remove the container(s) listed."
fi
