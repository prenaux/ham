#!/bin/bash
. ham-bash-lib.sh

usage() {
    echo "usage: repos-exec repos_list (-x) [ commands ]"
    echo ""
    echo "  Executes a bash command in the repositories."
    echo ""
    echo "  If a directory is passed as repo_list we'll switch to that folder and use 'repos-list-cwd'."
    echo "  If '-x' is specified commands will be executed concurrently."
    echo ""
    echo "  The commands are executed verbatim with each repo as the CWD."
    echo ""

    if [[ "${BASH_SOURCE[0]}" != "${0}" ]]; then
        # sourced...
        return 1
    else
        # regular call
        exit 1
    fi
}

# Check that there is at least one argument...
if [ $# = 0 -o "$1" == "-h" -o "$2" == "-h" ]; then
    if [ $# = 0 ]; then
        echo "E/No argument specified"
        echo ""
    fi
    usage
fi

# Fetch the list of repos
if [[ -d "$1" ]]; then
    echo "I/repos_list '$1' is a directory, switching to it and using repos-list-cwd."
    cd "$1"
    pwd
    shift
    REPOS_CWD=`repos-list-cwd`
elif [[ -f "$1" ]]; then
    REPOS_CWD=`cat "$1"`
    REPOS_CWD=$(eval echo \"$REPOS_CWD\")
    shift
else
    echo "W/repos_list isn't a file, assuming its a command and using repos-list-cwd instead."
    REPOS_CWD=`repos-list-cwd`
fi

# Check that they are all git directories
for ARG in $REPOS_CWD; do
    if [ ! -d $ARG/.git ]; then
        echo "E/Not a git directory: '$ARG'"
        ERR_NOTGITDIR=1
    fi
done
if [ ! -d $ARG ]; then
    exit 1
fi

# Check if we're running in concurrent mode
if [ "$1" == "-x" ]; then
    CONCURRENT=1
    shift
fi
if [ -z $CONCURRENT ]; then
    echo "I/Running sequentially"
else
    echo "I/Running concurrently"
fi

# Run the commands
for ARG in $REPOS_CWD; do
    echo "I/===== Repo '$ARG' ====="
    pushd "$ARG" > /dev/null
    if [ ! -z "$1" ]; then
        if [ -z $CONCURRENT ]; then
            $@
            echo ""
        else
            $@ &
        fi
    fi
    popd > /dev/null
done

wait
echo "== Done."
