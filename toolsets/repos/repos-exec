#!/bin/bash -e
. ham-bash-lib.sh

usage() {
  echo "usage: repos-exec (-x|-s) [ commands ]"
  echo ""
  echo "  Executes a bash command in the repositories."
  echo ""
  echo "  \$REPO_LIST: If a directory is set as REPO_LIST we'll switch to"
  echo "  that folder and use 'repos-list-cwd'. Defaults to \$WORK."
  echo ""
  echo "  If '-x' is specified commands will be executed concurrently."
  echo "  If '-s' is specified commands will be executed sequentially."
  echo ""
  echo "  The commands are executed verbatim with each repo as the CWD."
  echo ""

  if [[ "${BASH_SOURCE[0]}" != "${0}" ]]; then
    # sourced...
    return 1
  else
    # regular call
    exit 1
  fi
}

# Check that there is at least one argument...
if [ $# = 0 ] || [ "$1" == "-h" ] || [ "$2" == "-h" ]; then
  if [ $# = 0 ]; then
    log_error "No argument specified"
    echo ""
  fi
  usage
fi

# Fetch the list of repos
REPOS_LIST=${REPOS_LIST:-$WORK}
if [[ -d "$REPOS_LIST/.git" ]]; then
  log_info "'$REPOS_LIST' is a git repo, running in it directly."
  REPOS_SINGLE_GIT_DIR="$(abspath "$REPOS_LIST")"
elif [[ -d "$REPOS_LIST" ]]; then
  log_info "repos_list '$REPOS_LIST' is a directory, switching to it and using repos-list-cwd."
  cd "$REPOS_LIST"
  REPOS_CWD=$(repos-list-cwd)
elif [[ -f "$REPOS_LIST" ]]; then
  log_info "REPOS_LIST file from envvar '$REPOS_LIST'."
  REPOS_CWD=$(cat "$REPOS_LIST")
  REPOS_CWD=$(eval echo \""$REPOS_CWD"\")
else
  log_warning "repos_list isn't a file, assuming its a command and using repos-list-cwd instead."
  REPOS_CWD=$(repos-list-cwd)
fi

# Detect concurrent mode
case "$1" in
  "-x")
    log_info "Running concurrently explicitly"
    CONCURRENT='y'
    shift
    ;;
  "-s")
    log_info "Running sequentially explicitly"
    CONCURRENT='n'
    shift
    ;;
  # Based on command
  "git-update" | "git-force-pull" | "git-push")
    log_info "Running concurrently based on command '$1'"
    CONCURRENT='y'
    ;;
  # Based on command
  "git-log" | "git-status" | "git-tui")
    log_info "Running sequentially based on command '$1'"
    CONCURRENT='n'
    ;;
  *)
    log_info "Running sequentially by default for command '$1'"
    CONCURRENT='n'
    ;;
esac

log_info "repos-exec: $*"

if [[ -n "$REPOS_SINGLE_GIT_DIR" ]]; then
  ARG="$REPOS_SINGLE_GIT_DIR"
  log_info "===== Single Repo '$ARG' ====="
  pushd "$ARG" >/dev/null
  if [ -n "$1" ]; then
    if [ $CONCURRENT == 'y' ]; then
      "$@" &
    else
      "$@"
      echo ""
    fi
  fi
  popd >/dev/null
else
  # Check that they are all git directories
  for ARG in $REPOS_CWD; do
    if [ ! -d "$ARG/.git" ]; then
      log_error "Not a git directory: '$ARG'"
      #ERR_NOTGITDIR=1
    fi
  done
  if [ ! -d "$ARG" ]; then
    exit 1
  fi

  # Run the commands
  for ARG in $REPOS_CWD; do
    log_info "===== Repo '$ARG' ====="
    pushd "$ARG" >/dev/null
    if [ -n "$1" ]; then
      if [ $CONCURRENT == 'y' ]; then
        "$@" &
      else
        "$@"
        echo ""
      fi
    fi
    popd >/dev/null
  done
fi

wait
log_success "=== Done ==="
