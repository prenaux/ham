#!/bin/bash -e
usage() {
    echo "usage: git-tui DIRECTORY (default to .)"
    echo ""
    echo "  Open a Git TUI in the specified directory."
    echo ""
    exit 1
}

PARAM_DIR=${1:-.}
DIR=${PARAM_DIR}
if [ ! -d "$DIR" ]; then
  DIR="$WORK/$DIR"
  if [ ! -d "$DIR" ]; then
    echo "E/Can't find directories '$PARAM_DIR' nor '$DIR'."
    usage
  fi
fi

if [ ! -d "$DIR/.git" ]; then
  cd "$DIR"
  DOT_GIT_UP=`ham-find-dir-up .git`
  if [[ ! -z "$DOT_GIT_UP" && -d "$DOT_GIT_UP" ]]; then
    DIR="$DOT_GIT_UP"
  else
    REPOS_LIST=$(repos-list-cwd)
    if [ -z "$REPOS_LIST" ]; then
      echo "E/Directory '$DIR' is not a git repo and none of its subfolder are one either."
      usage
    # Show a directory picker. Don't show it on Windows since piping in fzf
    # doesn't work correctly there.
    elif [[ "$HAM_OS" != "NT" ]]; then
      # Create an array to store the list of repositories and changes
      REPOS_WITH_CHANGES=()

      # Loop through the repositories and store the number of changes
      for repo in $REPOS_LIST; do
        cd "$repo"
        changes=$(git-head-info branch_changes)
        REPOS_WITH_CHANGES+=("${repo}\t (status: ${changes})")
        cd - > /dev/null
      done

      # Pass the list to fzf and get the selected folder
      SELECTED_REPO=$(printf '%b\n' "${REPOS_WITH_CHANGES[@]}" | fzf)

      # Extract and print the folder path from the selected item
      DIR=$(echo "$SELECTED_REPO" | sed 's/\t (status: [^)]*)//')
      echo "I/Selected '$DIR'."
    fi
  fi
fi

DARKMODE=1
if [[ "$(uname -s)" == "Darwin" ]]; then
    if [[ "$(defaults read -g AppleInterfaceStyle 2> /dev/null)" == "Dark" ]]; then
        DARKMODE=1
        echo "I/Detected darkmode."
    else
        DARKMODE=0
        echo "I/Detected lightmode."
    fi
else
    echo "I/Defaulting to darkmode."
fi

PARAMS=()
if [[ $DARKMODE = 1 ]]; then
  PARAMS=("${PARAMS[@]}" -ucf "$HAM_HOME/toolsets/repos/lazygit/darkmode.yml")
else
  PARAMS=("${PARAMS[@]}" -ucf "$HAM_HOME/toolsets/repos/lazygit/lightmode.yml")
fi

(set -x ;
 cd "$DIR" ;
 "lazygit" "${PARAMS[@]}")
