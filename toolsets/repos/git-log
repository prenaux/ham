#!/bin/bash -e
usage() {
  echo "usage: git-log (current_branch|.) (origin|.)"
  echo ""
  echo "examples:"
  echo "  # Print all branches' commit graph"
  echo "  git-log"
  echo "  # Print the current branches' commit graph"
  echo "  git-log ."
  echo "  git-log current_branch"
  echo "  # Print the current branches' commit and the origin's commits graph"
  echo "  git-log . ."
  echo "  git-log current_branch origin"
  exit 1
}

. "$HAM_HOME/bin/ham-bash-setenv.sh"

FORMAT=(--pretty=format:'%C(yellow)%h%Cgreen%d %Creset%s (%Cblue%an%Creset - %Cred%ad%Creset)' --date=short)
LOG_COUNT=${LOG_COUNT:-10}

if [ -z "$1" ]; then
  echo "I/=== Status ==="
  git-status short
  echo "I/=== Last ${LOG_COUNT} commits ==="
  git --no-pager log --all --decorate --oneline -${LOG_COUNT} --graph "${FORMAT[@]}"
else
  BRANCH=$(git-get-branch-name "$1")
  echo "I/Status:"
  git-status
  echo "I/Logging branch '$BRANCH'."
  shift
  ORIGIN="$1"
  if [ "$ORIGIN" == "origin" ] || [ "$ORIGIN" == "." ]; then
    ORIGIN=origin
    echo "I/Default origin '$ORIGIN'."
  fi
  if [ -z "$ORIGIN" ]; then
    git log --decorate --oneline --graph --first-parent "${FORMAT[@]}" "$BRANCH" "$@"
  else
    shift
    git log --decorate --oneline --graph --first-parent "${FORMAT[@]}" "$BRANCH" "$ORIGIN/$BRANCH" "$@"
  fi
fi
