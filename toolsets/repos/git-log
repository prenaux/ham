#!/bin/bash -e
usage() {
  echo "usage: git-log (-LOG_COUNT) (current_branch|.) (origin|.)"
  echo ""
  echo "examples:"
  echo "  # Print all branches' commit graph"
  echo "  git-log"
  echo "  # Print the current branches' commit graph"
  echo "  git-log ."
  echo "  git-log current_branch"
  echo "  # Print the current branches' commit and the origin's commits graph"
  echo "  git-log . ."
  echo "  git-log current_branch origin"
  exit 1
}

. "$HAM_HOME/bin/ham-bash-setenv.sh"

FORMAT=(--pretty=format:'%C(yellow)%h%Cgreen%d %Creset%s (%Cblue%an%Creset - %Cred%ad%Creset)' --date=short)
LOG_COUNT=${LOG_COUNT:-10}

if [ "${1:0:1}" = "-" ]; then
  if echo "$1" | grep -qE '^-[0-9]+$'; then
    LOG_COUNT=${1#-}
    shift
  fi
fi

PAGER=--no-pager
if [ "$LOG_COUNT" == "0" ]; then
  PAGER=
  LOG_COUNT=100000
fi

if [ -z "$1" ]; then
  log_info "Status:"
  git-status short
  log_info "Last ${LOG_COUNT} commits:"
  # shellcheck disable=SC2086
  (set -x ; git $PAGER log --all --decorate --oneline -${LOG_COUNT} --graph "${FORMAT[@]}")
else
  BRANCH=$(git-get-branch-name "$1")
  log_info "Status:"
  git-status short
  log_info "Logging branch '$BRANCH'."
  shift
  ORIGIN="$1"
  if [ "$ORIGIN" == "origin" ] || [ "$ORIGIN" == "." ]; then
    ORIGIN=origin
    echo "I/Default origin '$ORIGIN'."
  fi
  if [ -z "$ORIGIN" ]; then
    # shellcheck disable=SC2086
    (set -x ; git $PAGER log --decorate --oneline -${LOG_COUNT} --graph --first-parent "${FORMAT[@]}" "$BRANCH" "$@")
  else
    shift
    # shellcheck disable=SC2086
    (set -x ; git $PAGER log --decorate --oneline -${LOG_COUNT} --graph --first-parent "${FORMAT[@]}" "$BRANCH" "$ORIGIN/$BRANCH" "$@")
  fi
fi
