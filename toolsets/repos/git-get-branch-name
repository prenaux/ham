#!/bin/bash
usage() {
  echo "usage: ${0##*/} (ORIGIN:)branch"
  echo ""
  echo "  Get or detect the name of a branch."
  echo "  "
  echo "  Detectable branch name:"
  echo "    main-branch|main_branch|master-branch|master_branch"
  echo "      Name of the main branch, usually main or master."
  echo "    current-branch|current_branch"
  echo "      Name of the current branch."
  echo ""
  echo "  Pickable branch name:"
  echo "    pick-all|pick_all"
  echo "      Pick any branch with fzf."
  echo "    pick-parent|pick_parent"
  echo "      Pick on of this or its parent branches with fzf."
  echo ""
  echo "  The 'ORIGIN:' prefix is useful to specifiy an origin and expand a detected"
  echo "  branch name behind it. For example:"
  echo "    $ ${0##*/} origin:main-branch"
  echo "    > 'origin/main'"
  echo "    $ ${0##*/} upstream:current-branch"
  echo "    > 'upstream/my-current-work'"
  echo "  "
  echo "  Note: Use git-get-checked-branch-name to check if a branch name exists."
  exit 1
}

if [ -z "$1" ]; then
  usage
fi

BRANCH=$1
if [[ $BRANCH == *":"* ]]; then
  ORIGIN=$(echo "$BRANCH" | cut -d ":" -f 1)
  BRANCH=$(echo "$BRANCH" | cut -d ":" -f 2)
fi

output_and_done() {
  if [ -n "$ORIGIN" ]; then
    echo "$ORIGIN/$1"
  else
    echo "$1"
  fi
  exit 0
}

case "$BRANCH" in
  main-branch | main_branch | master-branch | master_branch)
    if [ "$(git rev-parse --verify main 2>/dev/null)" ]; then
      output_and_done main
    fi
    if [ "$(git rev-parse --verify master 2>/dev/null)" ]; then
      output_and_done master
    fi
    echo "get_branch_error__cant_find_main_branch"
    ;;
  current-branch | current_branch | .)
    CURRENT_BRANCH=$(git branch --no-color 2>/dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/')
    output_and_done "$CURRENT_BRANCH"
    ;;
  parent-branch | parent_branch)
    PARENT_BRANCH=$(git-get-parent-branch-names parent)
    if [[ "$PARENT_BRANCH" == "__no_parent_branch__" ]]; then
      echo "get_branch_error__no_parent_branch"
    else
      output_and_done "$PARENT_BRANCH"
    fi
    ;;
  pick-all | pick_all)
    SEL_BRANCH=$(git-ls-branches | fzf --query="$CURRENT_BRANCH" --select-1)
    # shellcheck disable=SC2181
    if [ $? -ne 0 ]; then
      echo "get_branch_error__pick_no_branch_selected"
    else
      output_and_done "$SEL_BRANCH"
    fi
    ;;
  pick-parent | pick_parent)
    SEL_BRANCH=$(git-get-parent-branch-names this_and_parents | fzf --query="$CURRENT_BRANCH" --select-1)
    # shellcheck disable=SC2181
    if [ $? -ne 0 ]; then
      echo "get_branch_error__pick_no_branch_selected"
    else
      output_and_done "$SEL_BRANCH"
    fi
    ;;
  *)
    output_and_done "$BRANCH"
    ;;
esac
