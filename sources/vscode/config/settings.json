{
  /*

  Extensions:
    - EditorConfig.EditorConfig: EditorConfig for VS Code
    - elazarcoh.cpp2-syntax: Cpp2 Syntax Highlighting
    - heaths.vscode-guid: Insert GUID - automatically assigned to Alt-G
    - IronGeek.vscode-env: Env File Syntax Highlighting
    - mhutchie.git-graph: Git Graph
    - mloskot.vscode-boost-jam: Boost Jam Language Support
    - monkeygroover.vscode-squirrel-lang: Squirrel Language Support
    - mrmlnc.vscode-duplicate: Duplicate Selection
    - rebornix.toggle: Toggle
    - ryuta46.multi-command: Multi Command - automatically assigned to Alt-X
    - stkb.rewrap: Rewrap - automatically assigned to Alt-Q
    - tuttieee.emacs-mcx: Awesome Emacs Keymap
    - vadimcn.vscode-lldb: LLDB Debugger
    - MehediDracula.php-namespace-resolver: PHP Namespace Resolver
    - bmewburn.vscode-intelephense-client: PHP Intelephense
    - calebporzio.better-phpunit: Better PHPUnit
    - wesbos.theme-cobalt2: Cobalt2 Theme Official
    - whizkydee.material-palenight-theme: Palenight Theme
    - ms-vscode-remote.remote-ssh: Remote - SSH development
    - junstyle.php-cs-fixer: php cs fixer
    - viveksjain.remreload: Automatically reload remote SSH window on timeout
    - Atishay-Jain.All-Autocomplete: Auto complete from all opened files

  To Edit the Keybindings:
    Alt+X / Cmd+Shift+P: Keyboard Shortcuts (JSON)
    Alt+X / Cmd+Shift+P: Open User Settings (JSON)

  */

  /**
    * Better Defaults
    **/
  "editor.copyWithSyntaxHighlighting": false,
  "diffEditor.ignoreTrimWhitespace": false,
  "editor.emptySelectionClipboard": false,
  "workbench.editor.enablePreview": false,
  "window.newWindowDimensions": "inherit",
  "editor.multiCursorModifier": "ctrlCmd",
  "files.trimTrailingWhitespace": true,
  "diffEditor.renderSideBySide": false,
  "editor.snippetSuggestions": "top",
  "editor.detectIndentation": false,
  "window.nativeFullScreen": false,
  "files.insertFinalNewline": true,
  "files.trimFinalNewlines": true,
  "workbench.sideBar.location": "right",
  "workbench.statusBar.visible": true,
  "workbench.editor.showTabs": false,
  "editor.minimap.enabled": false,
  "editor.rulers": [80],
  "editor.autoClosingBrackets": "never",
  "editor.inlineSuggest.enabled": true,
  "editor.tabSize": 2,
  "workbench.editor.wrapTabs": true,
  "editor.cursorStyle": "block",
  "editor.cursorBlinking": "solid",
  "workbench.colorCustomizations": {
    "editorCursor.foreground": "#bb0000",
    "terminalCursor.foreground": "#bb0000",
    // make the badges a lot less intrusive
    "activityBarBadge.background": "#0000",
    "activityBarBadge.foreground": "#777f",
    "badge.background": "#0000",
    "badge.foreground": "#777f",
  },
  "zenMode.fullScreen": false,
  "zenMode.centerLayout": false,
  "editor.wordBasedSuggestions": true,
  "editor.wordBasedSuggestionsMode": "allDocuments",
  // Controls whether suggestions should automatically show up while typing.
  "editor.quickSuggestions": {
    "other": true,
    "comments": true,
    "strings": true
  },

  /**
    * Silence The Noise
    */
  "breadcrumbs.enabled": false,
  "scm.diffDecorations": "none",
  "editor.hover.enabled": false,
  "editor.matchBrackets": "near",
  "workbench.tips.enabled": false,
  "editor.colorDecorators": false,
  "git.decorations.enabled": false,
  "workbench.startupEditor": "none",
  "editor.lightbulb.enabled": false,
  "editor.selectionHighlight": true,
  "editor.overviewRulerBorder": false,
  "editor.renderLineHighlight": "none",
  "editor.occurrencesHighlight": false,
  "problems.decorations.enabled": false,
  "editor.renderControlCharacters": false,
  "editor.hideCursorInOverviewRuler": true,
  "editor.gotoLocation.multipleReferences": "goto",
  "editor.gotoLocation.multipleDefinitions": "goto",
  "editor.gotoLocation.multipleDeclarations": "goto",
  "workbench.editor.enablePreviewFromQuickOpen": false,
  "editor.gotoLocation.multipleImplementations": "goto",
  "editor.gotoLocation.multipleTypeDefinitions": "goto",
  "editor.renderWhitespace": "none",
  "editor.guides.indentation": false,
  "editor.bracketPairColorization.enabled": false,

  /**
   * Left margin/gutter
   */
  "editor.lineNumbers": "off",
  // Show the breakpoint, +/- & edit icons
  "editor.glyphMargin": true,
  // disable folding and the wide margin that goes with it
  "editor.folding": false,
  // disable margin that's for extra icons, like review comments - still works but
  // overlaps with other icons in that case
  "editor.lineDecorationsWidth": 0,

  /**
    * Typography
    **/
  "editor.fontFamily": "CommitMono, MonoLisa, Consolas, Menlo, Monaco, 'Courier New', monospace",
  "editor.fontSize": 13,
  "editor.lineHeight": 24,
  "editor.suggestFontSize": 13,
  "editor.suggestLineHeight": 24,
  "terminal.integrated.fontSize": 13,
  "terminal.integrated.lineHeight": 1.2,

  /**
    * Find
    **/
  "editor.find.loop": false,
  "search.useIgnoreFiles": false,

  /**
    * Code
    **/
  // Include "-" in word selection.
  "editor.wordSeparators": "`~!@#%^&*()=+[{]}\\|;:'\",.<>/?",
  "emmet.includeLanguages": {
    "blade": "html",
    "vue-html": "html",
    "vue": "html"
  },
  "files.associations": {
    ".php_cs": "php",
    ".php_cs.dist": "php",
    "*.cni": "cpp",
    "*.cpp2": "cpp",
    "*.ham": "bjam",
    "vector": "cpp",
    "*.ni": "squirrel",
    "*.nip": "squirrel",
    "*.niw": "squirrel",
    "*.gml": "xml",
    "*.vlk": "xml",
    "*.level": "xml",
    "*.css": "tailwindcss"
  },

  /**
    * PHP
    **/
  "php.suggest.basic": false,

  /**
    * PHP CS Fixer
    **/
  "[php]": {
    "editor.defaultFormatter": "junstyle.php-cs-fixer"
  },
  "php-cs-fixer.onsave": true,
  "php-cs-fixer.showOutput": false,
  "php-cs-fixer.autoFixByBracket": false,
  "php-cs-fixer.rules": "@PSR2",

  /**
    * JS / Prettier
    **/
  "eslint.alwaysShowStatus": true,
  "eslint.packageManager": "yarn",
  "eslint.run": "onSave",
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },
  "prettier.requireConfig": true,
  "prettier.useEditorConfig": false,

  /**
    * C/C++
    **/
  "C_Cpp.default.cppStandard": "c++20",
  "C_Cpp.default.cStandard": "c17",
  "C_Cpp.clang_format_fallbackStyle": "Google",
  "C_Cpp.formatting": "clangFormat",
  "C_Cpp.vcpkg.enabled": false,
  "C_Cpp.codeFolding": "disabled",
  "C_Cpp.dimInactiveRegions": false,

  /**
   * Exclude perf killers
   **/
  "files.exclude": {
     "**/.git/objects/**": true,
     "**/.hg/**": true,
     "**/.svn/**": true,
     "**/node_modules/**": true,
     "**/tmp/**": true,
   },

  "files.watcherExclude": {
    "**/_tmp/**": true,
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/.hg/**": true,
    "**/.svn/**": true,
    "**/dist/**": true,
    "**/ham/toolsets/*/dist/**": true,
    "**/ham/toolsets/*/lin-*/**": true,
    "**/ham/toolsets/*/nt-*/**": true,
    "**/ham/toolsets/*/osx-*/**": true,
    "**/node_modules/**": true,
    "**/tmp/**": true,
    "**/venv/**": true,
  },

  "search.exclude": {
    // Hide other source controls
    "**/.hg/**": true,
    "**/.svn/**": true,
    // Hide everything in /vendor, except the "laravel" and "livewire" folder.
    "**/vendor/{[^l],?[^ai]}*": true,
    // Hide everything in /public, except "index.php"
    "**/public/{[^i],?[^n]}*": true,
    "**/node_modules": true,
    "**/dist": true,
    "**/_ide_helper.php": true,
    "**/composer.lock": true,
    "**/package-lock.json": true,
    "storage": true,
    ".phpunit.result.cache": true,
    "**/*.min.js": true,
    "**/_*_ModuleDef.*": true,
    "**/*.h.idl.xml": true,
    "**/*.h.idl.inl": true,
    // Hide compiled emscripten js
    "**/bin/web-js/*_[dr]a.js": true,
    "**/bin/web-js/*_[dr]a.aw": true,
    "**/bin/web-js/*_[dr]a.html": true,
    // Hide venv in Python modules
    "**/venv/**": true,
    // Hide ham toolsets
    "**/ham/toolsets/*/lin-*/**": true,
    "**/ham/toolsets/*/nt-*/**": true,
    "**/ham/toolsets/*/osx-*/**": true,
    "**/ham/toolsets/*/dist/**": true,
  },

  "extensions.autoCheckUpdates": false,
  "extensions.autoUpdate": false,
  // 'python.linting.enabled' completely destroys performance on large projects
  // and consumes all CPU. It's a known issue, but it's been open for 3 years.
  "python.linting.enabled": false,

  /**
    * Misc
    **/
  "emacs-mcx.strictEmacsMove": true,
  "extensions.ignoreRecommendations": true,
  "git.autofetch": true,
  "git.confirmSync": false,
  "git.ignoreRebaseWarning": true,
  "githubPullRequests.pullBranch": "never",
  "githubPullRequests.showPullRequestNumberInTree": true,
  "window.openFoldersInNewWindow": "off",
  "window.autoDetectColorScheme": true,
  // Default Dark+, Cobalt2, Palenight (Mild Contrast)
  "workbench.preferredDarkColorTheme": "Palenight (Mild Contrast)",
  "workbench.preferredLightColorTheme": "Default Light+",
  "workbench.colorTheme": "Palenight (Mild Contrast)",
  // "find in selection" is automatically set when more than one line is selected.
  // 1) select more than one line
  // 2) fill search/replace
  // 3) cmdCtrl+enter to replace in selection
  "editor.find.autoFindInSelection": "multiline",
  "git.inputValidationSubjectLength": 200,
  "lldb.suppressUpdateNotifications": true,
  "cmake.configureOnOpen": false,
  "terminal.integrated.enableMultiLinePasteWarning": false,
  // Stop the update notifications. Click the cog in the bottom left -> Check
  // Updates to update manually.
  "update.mode": "manual",

  // Disable function keys in the terminal so that we can use htop, mc, etc.
  "terminal.integrated.commandsToSkipShell": [
    // f1
    "-workbench.action.showCommands",
    // f2
    "-editor.action.rename",
    // f3
    "-workbench.action.terminal.findNext",
    // f4
    "-search.action.focusNextSearchResult",
    // f5
    "-workbench.action.debug.start",
    // f6
    "-workbench.action.debug.pause",
    "-workbench.action.focusNextPart",
    // f7
    "-editor.action.wordHighlight.next",
    // f8
    "-editor.action.marker.nextInFiles",
    // f9
    "-editor.debug.action.toggleBreakpoint",
    // f10
    "-extension.node-debug.startWithStopOnEntry",
    "-jupyter.runByLine",
    "-jupyter.runByLineNext",
  ],

  // The path to the git executable. If none of these works use the Command
  // Palette then "Open Remote Settings (JSON)" to set this value to the
  // absolute path to your git executable.
  "git.path": [
    "/usr/bin/git",
    "d:/Work/ham/toolsets/repos/nt-x86/git/bin/git.exe",
    "${env:HOME}/Work/ham/toolsets/repos/nt-x86/git/mingw64/bin/git.exe",
  ],

  // Terminal paths
  "terminal.integrated.profiles.windows": {
    "ham-shell": {
      "path": [
        "${env:HOME}/Work/ham/toolsets/repos/nt-x86/git/bin/bash.exe",
        "d:/Work/ham/toolsets/repos/nt-x86/git/bin/bash.exe"
      ],
      "icon": "terminal-bash",
      "env": {},
      "args": [ "-i" ]
    },
  },
  "terminal.integrated.defaultProfile.windows": "ham-shell",
  "terminal.integrated.scrollback": 1000000
}
