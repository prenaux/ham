SLASH   ?= / ;
SUFOBJ  ?= .o ;
SUFLIB  ?= .a ;
PREFIXDLL ?= lib ;
CHMOD   ?= chmod ;

if $(TARGET_OS) = NT {
  SUFEXE = .exe ;
  SUFDLL = .dll ;
  if $(TARGET_OSPLAT) = X64 {
    ZIGCC_TARGET = x86_64-windows-gnu ;
  }
  else if $(TARGET_OSPLAT) = ARM64 {
    ZIGCC_TARGET = aarch64-windows-gnu ;
  }
  else {
    EXIT "E/TARGET_OSPLAT for $(TARGET_OS) invalid:" $(TARGET_OSPLAT) ;
  }
}
else if $(TARGET_OS) = MACOSX {
  SUFEXE = "" ;
  SUFDLL = .dylib ;
  if $(TARGET_OSPLAT) = X64 {
    ZIGCC_TARGET = x86_64-macos-none ;
  }
  else if $(TARGET_OSPLAT) = ARM64 {
    ZIGCC_TARGET = aarch64-macos-none ;
  }
  else {
    EXIT "E/TARGET_OSPLAT for $(TARGET_OS) invalid:" $(TARGET_OSPLAT) ;
  }
}
else if $(TARGET_OS) = LINUX {
  SUFEXE = .$(TARGET_OSPLAT:L) ;
  SUFDLL = .so ;
  if $(TARGET_OSPLAT) = X64 {
    ZIGCC_TARGET = x86_64-linux-gnu ;
  }
  else if $(TARGET_OSPLAT) = ARM64 {
    ZIGCC_TARGET = aarch64-linux-gnu ;
  }
  else {
    EXIT "E/TARGET_OSPLAT for $(TARGET_OS) invalid:" $(TARGET_OSPLAT) ;
  }
}
else {
  EXIT "E/TARGET_OS unknown:" $(TARGET_OS) ;
}

C++FLAGS ?= ;
CCFLAGS  ?= ;

CC   ?= zig cc -target $(ZIGCC_TARGET) ;
C++  ?= zig c++ -target $(ZIGCC_TARGET) ;
LINK ?= zig cc -target $(ZIGCC_TARGET) ;
AR   ?= zig ar -rcs ;
ZIGCC = 1 ;

LINKFLAGS   ?= "" ;
LINKLIBS    ?=  ;
OPTIM       ?= "" ;
STDHDRS     ?= ;
UNDEFFLAG   ?= "-u _" ;

if $(TARGET_OS) = MACOSX {
  CLANG_BASE_FLAGS =
    -isysroot $(MACOS_SDK_PATH)
    -F$(MACOS_SDK_PATH)/System/Library/Frameworks
    # -I$(MACOS_SDK_PATH)/usr/include
    # -L$(MACOS_SDK_PATH)/usr/lib
  ;
  CCFLAGS += $(CLANG_BASE_FLAGS) ;
  # C++FLAGS += $(CLANG_BASE_FLAGS) ;
  LINKFLAGS += $(CLANG_BASE_FLAGS) ;
}
