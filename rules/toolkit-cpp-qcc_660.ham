STRICT_ALIASING_FLAGS = -fno-strict-aliasing ;

QCC_CC_ARGS +=
  -ffunction-sections
  -fdata-sections
  -fvisibility=hidden
  -Wno-switch
  -Wno-unused-value
  -D_XOPEN_SOURCE=600
;
QCC_CPP_ARGS +=
  -std=$(C++VERSION)
  -Wno-narrowing
  -D_XOPEN_SOURCE=600
  -D_HAS_C9X=1
  -fexceptions
;

LINKFLAGS +=
  -fvisibility=hidden
  -ffunction-sections
  -fdata-sections
;

### OSX ###
if $(QNX) {
  QCC_CC_ARGS +=
    -fPIC
    -Wno-deprecated-declarations
  ;

  QCC_CPP_ARGS +=
    -Wno-conversion-null
  ;

  # if $(OSPLAT) = X64 {
    # QCC_CC_ARGS += -m64 ;
    # LINKFLAGS += -m64 ;
  # }
  # else if $(OSPLAT) = X86 {
    # QCC_CC_ARGS += -m32 ;
    # LINKFLAGS += -m32 ;
  # }

  if $(BUILD) = ra {
    LINKFLAGS_EXE += -dead_strip ;
    LINKFLAGS_DLL += -dead_strip ;
  }

  LINKLIBS +=
    -lstdc++ -lc -lgcc -lm -lcpp -lcxa -lGLESv2 -lEGL -lsocket -lscreen ;
}

CCFLAGS   += $(QCC_CC_ARGS) ;
C++FLAGS  += $(QCC_CC_ARGS) $(QCC_CPP_ARGS) ;

### static libraries ###
LINKLIBS +=
# -lOpenVG
# -lbz2
# -ldisputil
# -lform
# -lmenu
# -lpanel
# -lqdb
# -lsocks
# -lxml2
# -lOpenVGU
# -lcache
# -ldrvr
# -lipsec
# -lnbutil
# -lpcap
# -lssl
# -laoi
# -lcrypto
# -lds
# -llogin
# -lncurses
# -lpccard
# -lrpc
# -ltermcap
# -lbacktrace
# -lcurl
# -lelf
# -llzo
# -lnetdrvr
# -lscreen
# -lucl
# -lc
# -limg
# -lm
# -lpps
# -lsocket
# -lusbdci
# -lusbdi
# -lwlconfig
;

rule tkCC++Build
{
  local t = $(<) ;
  local strOpt = "" ;
  # Set the debug infos generation
  # Set the optimization flags
  if $(DEBUG) = 1 {
    PKGOPTIM += $(CLANG_DBG_ARGS) ;
    PKGOPTIM += "-g" ;
    strOpt += "(DebugOnly) " ;
  }
  # Set debug-only flags
  else {
    PKGOPTIM += $(CLANG_OPT_ARGS) ;
    strOpt += "(Optimized) " ;
  }
  logVerbose "- CC++Build: " $(strOpt) ;
}

rule tkC++Exceptions {
  ObjectC++Flags $(<) : -fexceptions ;
}
rule tkNoC++Exceptions {
  ObjectC++Flags $(<) : -fno-exceptions ;
}

rule tkC++RTTI {
  ObjectC++Flags $(<) : -frtti ;
}
rule tkNoC++RTTI {
  ObjectC++Flags $(<) : -fno-rtti ;
}

rule tkCC++Lint {
}
