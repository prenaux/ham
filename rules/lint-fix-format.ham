NOTFILE lff lint fix ;
DEPENDS lff : lint fix ;

# lffGlob DIR : EXTS
rule lffGlob {
  return [ FGristFiles [ GLOB [ FDirName $(<) ] : "*"$(>) ] ] ;
}

# lffLintFiles_sh TARGET : FILES
rule lffLintFiles_sh {
  NOTFILE $(<) ;
  ALWAYS $(<) ;
  DEPENDS $(<) : $(>) ;
  DEPENDS lint : $(<) ;
}

# lffFixFiles_sh TARGET : FILES
rule lffFixFiles_sh {
  NOTFILE $(<) ;
  ALWAYS $(<) ;
  DEPENDS $(<) : $(>) ;
  DEPENDS fix : $(<) ;
}

rule lffFiles_sh {
  lffFixFiles_sh $(<)_fix : $(>) ;
  lffLintFiles_sh $(<)_lint : $(>) ;
  DEPENDS $(<) : $(<)_fix $(<)_lint ;
}

SHFMT_PARAMS ?= -i 2 -ci -bn -ln=bash -bn=false ;
SHELLCHECK_PARAMS ?= --shell=bash --format=gcc ;
SHELLCHECK_PARAMS += -e SC1091 ; # 'Not following: ... was not specified as input'
# This is better than disabling SC1091, but oh so slowww :(
# SHELLCHECK_PARAMS += -x --source-path="$(HAM_HOME)" --source-path="$HAM_HOME/bin" ;

actions together lffLintFiles_sh {
  source "$HAM_HOME/bin/ham-bash-setenv.sh"
  HAM_NO_VER_CHECK=1 toolset_import_once shell_linter > /dev/null
  set -ex
  "$HAM_SHELL_LINTER_DIR/shfmt" -d $(SHFMT_PARAMS) "$(>)"
  "$HAM_SHELL_LINTER_DIR/shellcheck" $(SHELLCHECK_PARAMS) "$(>)"
}

actions together lffFixFiles_sh {
  source "$HAM_HOME/bin/ham-bash-setenv.sh"
  HAM_NO_VER_CHECK=1 toolset_import_once shell_linter > /dev/null
  set -ex
  "$HAM_SHELL_LINTER_DIR/shfmt" -w $(SHFMT_PARAMS) "$(>)"
}
