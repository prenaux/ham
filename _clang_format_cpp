#
# Documentation at https://clang.llvm.org/docs/ClangFormatStyleOptions.html
#

# Let clang-format detect based on the extension
# Language: Cpp

# C++ standard
Standard: c++20
BasedOnStyle: LLVM

# Space indents, LF Line ending & 80 cols
UseTab: false
UseCRLF: false
LineEnding: LF
IndentWidth: 2
ContinuationIndentWidth: 2
MaxEmptyLinesToKeep: 1
ColumnLimit: 80
InsertNewlineAtEOF: true

# Preprocessor
PPIndentWidth: 2
IndentPPDirectives: AfterHash
SortIncludes: false

# niLang/niCC macros
ForEachMacros: ["niLoop","niLoopr","niLoopit","niLooprit","niExec","niExec_","niSubmit","niSubmit_"]
StatementAttributeLikeMacros: ["niAlignedType","niAligned","niDeprecated","niFn","niFnS","niFnV"]
TypenameMacros: ["niExportFunc","niExportFuncCPP","niFn","niFnS","niFnV","niExportFn"]
IfMacros: ["niCheckIfError","niIfConstructError","niCheckNNIfNull","niTry","niTryError","niCatch","niCatchAll","niCatchError"]
WhitespaceSensitiveMacros:
 - niDeclareInterfaceUUID
 - niCAssert

# Fixes
FixNamespaceComments: true

# Misc stuff
PointerAlignment: Left
BinPackParameters: true
BinPackArguments: true

# Break/reflow
ReflowComments: false
BreakStringLiterals: false
BreakBeforeBinaryOperators: None
RequiresClausePosition: SingleLine
# This would be useful but its broken in a bunch of scenarios
SeparateDefinitionBlocks: Leave

# Indents & Alignments
IndentGotoLabels: false
IndentWrappedFunctionNames: false
AlignConsecutiveBitFields: true
AlignEscapedNewlines: Left
AlignTrailingComments:
  Kind: Always
  OverEmptyLines: 0

# Constructors
BreakConstructorInitializers: BeforeComma
PackConstructorInitializers: Never
ConstructorInitializerAllOnOneLineOrOnePerLine: true
AllowAllConstructorInitializersOnNextLine: true

# Brace/new line styling
AllowShortBlocksOnASingleLine: Never
AllowShortCaseLabelsOnASingleLine: true
AllowShortEnumsOnASingleLine: false
AllowShortFunctionsOnASingleLine: false
AllowShortIfStatementsOnASingleLine: false
AllowShortLambdasOnASingleLine: Inline
AllowShortLoopsOnASingleLine: false
BreakBeforeBraces: Custom
BraceWrapping:
    AfterFunction: true
    BeforeElse: true
    AfterClass: false
    AfterControlStatement: MultiLine
    AfterEnum: false
    AfterNamespace: false
    AfterStruct: false
    AfterUnion: false
    BeforeCatch: false
    SplitEmptyFunction: true
